{"version":3,"sources":["helpers/network.js","helpers/pointcalculations.js","Map.js","api/mapbox.js","UI/FlightData.js","UI/MapControls.js","UI/SettingsTab.js","UI/AirportDataPanel.js","UI/Loader.js","Overlay.js","App.js","serviceWorker.js","index.js"],"names":["url","window","location","host","module","exports","getAllFlightCord","callback","fetch","method","body","then","res","json","resp","data","catch","error","console","log","getAllGroundedCord","getAllAirports","getFirstAirportByCountry","country","toUpperCase","getAirportsByCountry","getDeparturesByIcao","icao","getArrivalsByIcao","midPoint","cordOne","cordTwo","lat","long","dist","Math","sqrt","Map","id","style","position","top","bottom","width","Component","require","mapboxgl","accessToken","MAP","data_retrieve_interval","numFlights","numGrounded","toggleLayer","ID","show","setLayoutProperty","getNumFlights","getNumGrounded","moveCamera","center","zoom","flyTo","FlightData","props","that","state","currentView","view","flightColor","groundedColor","inputValue","numAirports","airports","flights","grounded","blink","blinkFlight","bind","blinkGrounded","prevProps","this","setState","clearInterval","_data_interval","setTimeout","version","className","fill","stroke","strokeWidth","strokeMiterlimit","d","height","backgroundColor","MapControls","onClick","borderBottomStyle","borderWidth","Icon","iconName","navigator","geolocation","getCurrentPosition","coords","longitude","latitude","pulsingDot","Uint8Array","size","onAdd","canvas","document","createElement","context","getContext","render","t","performance","now","outerRadius","clearRect","beginPath","arc","PI","fillStyle","strokeStyle","lineWidth","getImageData","triggerRepaint","addImage","pixelRatio","addLayer","drawPulseDot","SettingsTab","showSettings","window_animation_class","Toggle","inlineLabel","label","onChange","e","s","AirportDataPanel","airport_data_components","airportsData","map","i","AirportDataComponent","key","name","timezone","city","unmount","resetView","Loader","Spinner","SpinnerSize","large","Overlay","displayAirportPanel","dataUpdateInterval","unmountAirportPanel","mountAirportPanel","num_flights","num_grounded","setInterval","airport_panel","TextField","placeholder","evt","input","PrimaryButton","text","result","num_airports","App","initializeIcons","Boolean","hostname","match","ReactDOM","getElementById","serviceWorker","ready","registration","unregister","Date","getHours","container","on","pointsOnMap","classList","add","length","addSource","type","source","layout","paint","addControl","NavigationControl","getSource","setData"],"mappings":"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","file":"static/js/main.6a5fc1a2.chunk.js","sourcesContent":["var url = \"http://\" + window.location.host;\r\n\r\n\r\nmodule.exports = {\r\n    getAllFlightCord: function(callback)\r\n    {\r\n        fetch(url + \"/flights/all\", {\r\n            method: \"GET\",\r\n            body: null,\r\n        }).then(res => res.json()).then(function(resp){\r\n            \r\n            callback(resp.data)\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n \r\n    },\r\n    getAllGroundedCord: function(callback)\r\n    {\r\n        fetch(url + \"/flights/grounded\", {\r\n            method: \"GET\",\r\n            body: null,\r\n        }).then(res => res.json()).then(function(resp){\r\n            \r\n            callback(resp.data)\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    },\r\n    getAllAirports: function(callback){\r\n        fetch(url + \"/airports/all\", {\r\n            method: \"GET\",\r\n            body: null,\r\n        }).then(res => res.json()).then(function(resp){\r\n            console.log(\"getting all airports\", resp.data);\r\n            callback(resp.data)\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    },\r\n    getFirstAirportByCountry: function(country, callback){\r\n        country = country.toUpperCase();\r\n        \r\n        fetch(url + \"/airports/first/\" + country, {\r\n            method: \"GET\",\r\n            body: null\r\n        }).then(res => res.json()).then((resp) => {\r\n            console.log(resp);\r\n\r\n            callback(resp.data);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    },\r\n    getAirportsByCountry: function(country, callback){\r\n        country = country.toUpperCase();\r\n        \r\n        fetch(url + \"/airports/\" + country, {\r\n            method: \"GET\",\r\n            body: null\r\n        }).then(res => res.json()).then((resp)=> {\r\n            console.log(resp);\r\n\r\n            callback(resp)\r\n        })\r\n    },\r\n    getDeparturesByIcao: function(icao, callback){\r\n        fetch(url + \"/airports/departure/icao24/\" + icao, {\r\n            method: \"GET\",\r\n            body: null\r\n        }).then(res => res.json()).then((resp)=> {\r\n            console.log(resp);\r\n\r\n            callback(resp)\r\n        })\r\n    },\r\n    getArrivalsByIcao: function(icao, callback){\r\n        console.log(\"fetching icao\");\r\n        fetch(url + \"/airports/arrivals/icao24/\" + icao, {\r\n            method: \"GET\",\r\n            body: null\r\n        }).then(res => res.json()).then((resp)=> {\r\n            console.log(resp);\r\n\r\n            callback(resp)\r\n        }) \r\n    }\r\n    \r\n}","module.exports = {\r\n    midPoint: function(cordOne, cordTwo){\r\n        return {\r\n            lat: (cordOne.lat + cordTwo.lat) / 2,\r\n            long: (cordOne.long + cordTwo.long) / 2\r\n        }\r\n    },\r\n    dist: function(cordOne, cordTwo){\r\n        return Math.sqrt((cordOne.lat - cordTwo.lat)**2 + (cordOne.long - cordTwo.long)**2);\r\n    }\r\n\r\n    \r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Map extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n    }\r\n\r\n    render() {\r\n\r\n        var mapStyle = {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            bottom: 0,\r\n            width: \"100%\"\r\n        }\r\n        return(\r\n            <div id = \"Map\" style = {mapStyle}>\r\n            </div>\r\n        )\r\n        /*\r\n        return (\r\n          <svg width={ window.screen.width} height={window.screen.height } viewBox=\"0 0 800 450\">\r\n            <g className=\"countries\">\r\n              {\r\n                this.state.worldData.map((d,index) => (\r\n                  <path\r\n                    key={ `path-${ index }` }\r\n                    d={ geoPath().projection(this.projection())(d) }\r\n                    className=\"country\"\r\n                    fill={ `rgba(38,50,56,${1 / this.state.worldData.length * index})` }\r\n                    stroke=\"#FFFFFF\"\r\n                    strokeWidth={ 0.3 }\r\n                  />\r\n                ))\r\n              }\r\n            </g>\r\n            <g className=\"markers\">\r\n              <circle\r\n                cx={ this.projection()([8,48])[0] }\r\n                cy={ this.projection()([8,48])[1] }\r\n                r={ 10 }\r\n                fill=\"#E91E63\"\r\n                className=\"marker\"\r\n              />\r\n            </g>\r\n          </svg>\r\n        )\r\n        */\r\n      }\r\n}\r\n","import mapboxgl from \"mapbox-gl/dist/mapbox-gl.js\";\r\n\r\nvar calc = require(\"../helpers/pointcalculations.js\");\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoidHJvcGljYWx0b2Z1IiwiYSI6ImNrMGc5cWJjcDA1ZGMzY241aGtoeWJnczYifQ.1lkF8CRWw2bxBUsnBKd4Aw';\r\n\r\n\r\nvar getAllFlightCord = require(\"../helpers/network.js\").getAllFlightCord;\r\nvar getAllGroundedCord = require(\"../helpers/network.js\").getAllGroundedCord;\r\nvar getAllAirports = require(\"../helpers/network.js\").getAllAirports;\r\n\r\n\r\nvar data_retrieve_interval = 2000;\r\n\r\nvar numFlights = 0;\r\nvar numGrounded = 0;\r\nexport var MAP;\r\n\r\nexport function renderMap() {\r\n\r\n    var d = new Date();\r\n    var style = (d.getHours() >= 17) ?'mapbox://styles/mapbox/dark-v10' : 'mapbox://styles/mapbox/light-v10'\r\n    MAP = new mapboxgl.Map({\r\n        container: 'Map',\r\n        style: 'mapbox://styles/mapbox/streets-v11',\r\n        zoom: 3,\r\n        center: [-96, 37.8],\r\n        style: 'mapbox://styles/mapbox/dark-v10'\r\n    });\r\n\r\n    MAP.on(\"load\", function () {\r\n\r\n        //turn loader off\r\n        document.getElementById(\"loader-overlay\").classList.add(\"loader-fade-out\");\r\n        function pointsOnMap(data) {\r\n            return {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": data\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //load all flights\r\n        getAllFlightCord((data) => {\r\n            numFlights = data.length;\r\n\r\n            MAP.addSource(\"flightsAll\", {\r\n                type: \"geojson\",\r\n                data: pointsOnMap(data)\r\n            });\r\n\r\n            MAP.addLayer({\r\n                id: \"flightsAll\",\r\n                source: \"flightsAll\",\r\n                type: \"circle\",\r\n                layout: {\r\n\r\n                },\r\n                paint: {\r\n                    \"circle-radius\": 4,\r\n                    \"circle-color\": \"green\"\r\n                }\r\n            });\r\n        });\r\n\r\n        MAP.addControl(new mapboxgl.NavigationControl());\r\n\r\n\r\n        function updateFlights() {\r\n            getAllFlightCord((data) => {\r\n                numFlights = data.length;\r\n                if (data != []) {\r\n                    MAP.getSource(\"flightsAll\").setData(pointsOnMap(data));\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n\r\n        var all_flight_interval = setInterval(updateFlights, data_retrieve_interval);\r\n    });\r\n\r\n}\r\n\r\nexport function toggleLayer (ID, show) {\r\n    if (show) {\r\n        MAP.setLayoutProperty(ID, 'visibility', \"visible\");\r\n    } else {\r\n        MAP.setLayoutProperty(ID, \"visibility\", \"none\")\r\n    }\r\n\r\n    //MAP.setLayoutProperty(ID, 'visibility',(layer.layout.visibility )layerID.indexOf(value) > -1 ? 'visible' : 'none');\r\n}\r\n\r\nexport function plotGrounded() {\r\n\r\n    //load all flights\r\n    MAP.on(\"load\", function () {\r\n        getAllGroundedCord((data) => {\r\n            numGrounded = data.length;\r\n            MAP.addSource(\"flightsGrounded\", {\r\n                type: \"geojson\",\r\n                data: {\r\n                    \"type\": \"FeatureCollection\",\r\n                    \"features\": data\r\n                }\r\n            });\r\n\r\n            MAP.addLayer({\r\n                id: \"flightsGrounded\",\r\n                source: \"flightsGrounded\",\r\n                type: \"circle\",\r\n                layout: {\r\n\r\n                },\r\n                paint: {\r\n                    \"circle-radius\": 4,\r\n                    \"circle-color\": \"red\"\r\n                }\r\n            });\r\n        });\r\n\r\n        function updateGrounded() {\r\n            getAllGroundedCord((data) => {\r\n                numGrounded = data.length;\r\n                if (data != [] ) {\r\n                    MAP.getSource(\"flightsGrounded\").setData({\r\n                        \"type\": \"FeatureCollection\",\r\n                        \"features\": data\r\n                    });\r\n                }\r\n            })\r\n        }\r\n      \r\n        var grounded_flights_interval = setInterval(updateGrounded, data_retrieve_interval);\r\n    });\r\n}\r\n\r\nexport function plotAirports() {\r\n    getAllAirports((data) => {\r\n\r\n        MAP.on(\"load\", function () {\r\n            MAP.addSource(\"Airports\", {\r\n                type: \"geojson\",\r\n                data: {\r\n                    \"type\": \"FeatureCollection\",\r\n                    \"features\": data\r\n                }\r\n                });\r\n\r\n            MAP.addLayer({\r\n                id: \"Airports\",\r\n                source: \"Airports\",\r\n                type: \"circle\",\r\n                layout: {\r\n\r\n                },\r\n                paint: {\r\n                    \"circle-radius\": 4,\r\n                    \"circle-color\": \"blue\"\r\n                }\r\n            });\r\n        })\r\n    });\r\n}\r\n\r\nexport function getNumFlights (){\r\n    return numFlights;\r\n}\r\n\r\nexport function getNumGrounded() {\r\n    return numGrounded;\r\n}\r\n\r\nexport function renderLine (matrix) {\r\n    MAP.addLayer({\r\n        \"id\": \"line\",\r\n        \"type\": \"line\",\r\n        \"source\": {\r\n            \"type\": \"geojson\",\r\n            \"data\": {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {},\r\n                \"geometry\": {\r\n                    \"type\": \"LineString\",\r\n                    \"coordinates\": matrix\r\n                }\r\n            }\r\n        },\r\n        \"layout\": {\r\n            \"line-join\": \"round\",\r\n            \"line-cap\": \"round\"\r\n        },\r\n        \"paint\": {\r\n            \"line-color\": \"#888\",\r\n            \"line-width\": 8\r\n        }\r\n    });\r\n}\r\n\r\nexport function removeLine() {\r\n    MAP.removeLayer(\"line\");\r\n}\r\n\r\nexport function drawFlightRoute(start, end) {\r\n\r\n    var rightAngleCoords = {\r\n        lat: Math.abs(start.lat - end.lat),\r\n        long: end.long\r\n    }\r\n\r\n    var line_end = {\r\n        lat: start.lat,\r\n        long: start.long\r\n    }\r\n\r\n    var flight_route_geojson = {\r\n        \"type\": \"FeatureCollection\",\r\n        \"features\": [{\r\n            \"type\": \"Feature\",\r\n            \"geometry\": {\r\n                \"type\": \"LineString\",\r\n                \"coordinates\": [\r\n                    [start.lat, start.long]\r\n                ]\r\n            }\r\n        }]\r\n    }\r\n\r\n    var lat_increment = (end.lat - start.lat) / 100;\r\n    var long_increment = (end.long - start.long) / 100;\r\n    var frameCount = 0;\r\n\r\n\r\n    MAP.addLayer({\r\n        'id': 'flight-route',\r\n        'type': 'line',\r\n        'source': {\r\n            'type': 'geojson',\r\n            'data': flight_route_geojson\r\n        },\r\n        'layout': {\r\n            'line-cap': 'round',\r\n            'line-join': 'round'\r\n        },\r\n        'paint': {\r\n            'line-color': '#ed6498',\r\n            'line-width': 2.5,\r\n            'line-opacity': 1\r\n        }\r\n    });\r\n\r\n    function animateFlightRoute() {\r\n\r\n        line_end.lat += lat_increment;\r\n        line_end.long += long_increment;\r\n\r\n        if (frameCount == 100) {\r\n            frameCount = 0;\r\n            line_end.lat = start.lat;\r\n            line_end.long = start.long;\r\n\r\n            flight_route_geojson.features[0].geometry.coordinates = [];\r\n        }\r\n\r\n        frameCount++;\r\n\r\n        flight_route_geojson.features[0].geometry.coordinates.push([line_end.lat, line_end.long]);\r\n        MAP.getSource('flight-route').setData(flight_route_geojson);\r\n    };\r\n\r\n    var flight_route_animate_interval = setInterval(animateFlightRoute, 1000 / 60);\r\n}\r\n\r\nexport function removeFlightRoute(){\r\n    MAP.removeLayer(\"flight-route\");\r\n}\r\n\r\nexport function drawPulseDot(center){\r\n\r\n    var size = 100;\r\n\r\n    var pulsingDot = {\r\n        width: size,\r\n        height: size,\r\n        data: new Uint8Array(size * size * 4),\r\n        onAdd: function () {\r\n            var canvas = document.createElement('canvas');\r\n            canvas.width = this.width;\r\n            canvas.height = this.height;\r\n            this.context = canvas.getContext('2d');\r\n        },\r\n        render: function () {\r\n            var duration = 1000;\r\n            var t = (performance.now() % duration) / duration;\r\n\r\n            var radius = size / 2 * 0.3;\r\n            var outerRadius = size / 2 * 0.7 * t + radius;\r\n            var context = this.context;\r\n\r\n            // draw outer circle\r\n            context.clearRect(0, 0, this.width, this.height);\r\n            context.beginPath();\r\n            context.arc(this.width / 2, this.height / 2, outerRadius, 0, Math.PI * 2);\r\n            context.fillStyle = 'rgba(252, 0, 126,' + (1 - t) + ')';\r\n            context.fill();\r\n\r\n            //inner circle\r\n            context.beginPath();\r\n            context.arc(this.width / 2, this.height / 2, radius, 0, Math.PI * 2);\r\n            context.fillStyle = 'rgba(252, 3, 86, 1)';\r\n            context.strokeStyle = 'white';\r\n            context.lineWidth = 2 + 4 * (1 - t);\r\n            context.fill();\r\n            context.stroke();\r\n\r\n            // update this image's data with data from the canvas\r\n            this.data = context.getImageData(0, 0, this.width, this.height).data;\r\n\r\n            // keep the map repainting\r\n            MAP.triggerRepaint();\r\n\r\n            // return `true` to let the map know that the image was updated\r\n            return true;\r\n        }\r\n    };\r\n\r\n    MAP.addImage('pulsing-dot', pulsingDot, { pixelRatio: 2 });\r\n\r\n    MAP.addLayer({\r\n        \"id\": \"pulsing-dot\",\r\n        \"type\": \"symbol\",\r\n        \"source\": {\r\n            \"type\": \"geojson\",\r\n            \"data\": {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": [{\r\n                    \"type\": \"Feature\",\r\n                    \"geometry\": {\r\n                        \"type\": \"Point\",\r\n                        \"coordinates\": center\r\n                    }\r\n                }]\r\n            }\r\n        },\r\n        \"layout\": {\r\n            \"icon-image\": \"pulsing-dot\"\r\n        }\r\n    });\r\n}\r\n\r\nexport function moveCamera(center, zoom = 3) {\r\n    MAP.flyTo({\r\n        center: center,\r\n        zoom: zoom\r\n    })\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\n\r\n\r\nimport {renderLine, drawFlightRoute, moveCamera} from \"../api/mapbox.js\";\r\nimport {getFirstAirportByCountry} from \"../helpers/network.js\";\r\n\r\n\r\nexport default class FlightData extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var that = this;\r\n        this.state = {\r\n            currentView: that.props.view,\r\n            flightColor: \"#04e000\",\r\n            groundedColor: \"#ff0026\",\r\n            inputValue: \"\",\r\n            numAirports: that.props.airports,\r\n            numFlights: that.props.flights,\r\n            numGrounded: that.props.grounded,\r\n            blink: false\r\n        }\r\n\r\n        this.blinkFlight.bind(this);\r\n        this.blinkGrounded.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        var that = this;\r\n\r\n        if(prevProps.view !== this.props.view){\r\n            this.setState({\r\n                currentView: that.props.view\r\n            });\r\n        }\r\n\r\n        if(prevProps.airports != this.props.airports){\r\n           this.setState({\r\n               numAirports: that.props.airports\r\n           });\r\n        }\r\n        \r\n        if(prevProps.grounded != this.props.grounded){\r\n            this.blinkGrounded()\r\n            this.setState({\r\n                numGrounded: that.props.grounded\r\n            }) \r\n        }\r\n\r\n        if(prevProps.flights != this.props.flights){\r\n            this.blinkFlight();\r\n            this.setState({\r\n                numFlights: that.props.flights\r\n            }) \r\n        }\r\n\r\n        \r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this._data_interval);\r\n    }\r\n\r\n    blinkFlight(){\r\n        var that = this;\r\n\r\n        this.setState({\r\n            flightColor: \"#000000\"\r\n        })\r\n        setTimeout(() => {\r\n            that.setState({\r\n                flightColor: \"#04e000\"\r\n            })    \r\n        }, 300);\r\n    }\r\n\r\n    blinkGrounded(){\r\n        var that = this;\r\n\r\n        this.setState({\r\n            groundedColor: \"#000000\"\r\n        })\r\n        setTimeout(() => {\r\n            that.setState({\r\n                groundedColor: \"#ff0026\"\r\n            })    \r\n        }, 300);\r\n    }\r\n\r\n    render() {\r\n\r\n        var testSVG = (\r\n            <svg id = \"plane-route-svg\" version=\"1.1\" id=\"Layer_1\"  x=\"0px\" y=\"0px\"\r\n                width=\"340px\" height=\"333px\" viewBox=\"0 0 340 333\" enableBackground=\"new 0 0 340 333\" >\r\n\r\n            <path className=\"path\" fill = \"transparent\" stroke=\"#000000\" strokeWidth=\"4\" strokeMiterlimit=\"10\" d=\"M66.039,133.545c0,0-21-57,18-67s49-4,65,8\r\n                s30,41,53,27s66,4,58,32s-5,44,18,57s22,46,0,45s-54-40-68-16s-40,88-83,48s11-61-11-80s-79-7-70-41\r\n                C46.039,146.545,53.039,128.545,66.039,133.545z\"/>\r\n            \r\n            </svg>\r\n        )\r\n\r\n\r\n        return (\r\n            <div id = \"flightinput\">\r\n                <div className = \"flightinput-current-view\">{this.state.currentView}</div>\r\n                    <div style = {{width: \"100%\", height: \"100px\"}}>\r\n                        <div className = \"flight-input-stats\" style = {{backgroundColor: this.state.flightColor}}>\r\n                            <div className = \"flight-input-stats-num\" >{this.state.numFlights} In Flight</div>\r\n                            <div className = \"flight-input-stats-desc\">Aircafts in the Sky</div>\r\n                        </div>     \r\n                    </div>\r\n                    <div style = {{width: \"100%\", height: \"100px\"}}>\r\n                        <div className = \"flight-input-stats\" style = {{backgroundColor: this.state.groundedColor}}>\r\n                            <div className = \"flight-input-stats-num\" >{this.state.numGrounded} Grounded</div>\r\n                            <div className = \"flight-input-stats-desc\">Aircrafts on the Ground</div>\r\n                        </div>     \r\n                    </div>\r\n                    <div style = {{width: \"100%\", height: \"100px\"}}>\r\n                        <div className = \"flight-input-stats\" style = {{backgroundColor: \"#0084ff\"}}>\r\n                            <div className = \"flight-input-stats-num\" > {this.state.numAirports} Airports</div>\r\n                            <div className = \"flight-input-stats-desc\"> Major Airports </div>\r\n                        </div>     \r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\nimport {moveCamera, drawPulseDot} from \"../api/mapbox.js\";\r\n\r\n\r\nexport default class MapControls extends Component {\r\n    render() {\r\n        return (\r\n            <div id = \"mapcontrols\">\r\n                <div className = \"mapcontrols-square\" onClick = {() => {\r\n                }} style = {\r\n                    {\r\n                        borderBottomStyle: \"Solid\",\r\n                        borderWidth: \"1px\"\r\n                    }\r\n                }>\r\n                    <Icon iconName = \"Add\"/>\r\n                </div>\r\n                <div className = \"mapcontrols-square\" style = {\r\n                    {\r\n                        borderBottomStyle: \"Solid\",\r\n                        borderWidth: \"1px\"\r\n                    }\r\n                }>\r\n                    <Icon iconName = \"Remove\"/>\r\n                </div>\r\n                <div className = \"mapcontrols-square\" onClick = {() => {\r\n                    var currentLocation = (position) =>{\r\n                        var center = [position.coords.longitude, position.coords.latitude];\r\n                        moveCamera(center, 12);\r\n                        drawPulseDot(center);\r\n                    }\r\n\r\n                    navigator.geolocation.getCurrentPosition(currentLocation);\r\n                }}>\r\n                    <Icon iconName = \"Location\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n\r\nimport {Icon} from \"office-ui-fabric-react/lib/Icon\";\r\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\n\r\nimport {toggleLayer} from \"../api/mapbox.js\";\r\n\r\nexport default class SettingsTab extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n\r\n        this.state = {\r\n            showSettings: null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var that = this;\r\n\r\n        var window_animation_class;\r\n\r\n        if(this.state.showSettings == null){\r\n            window_animation_class = \"\"\r\n        }\r\n        else{\r\n            window_animation_class = (that.state.showSettings) ? \"settings-tab-window-slide-In\" : \"settings-tab-window-slide-Out\";\r\n        }\r\n\r\n        return (\r\n            <div id = \"settings-tab\">\r\n                <div className = \"settings-tab-button\" onClick = {() => {\r\n                    if(this.state.showSettings == null) this.state.showSettings = false;\r\n                    this.setState({\r\n                        showSettings: !that.state.showSettings\r\n                    });\r\n                }}>\r\n                    <Icon iconName = \"Settings\"/>\r\n                </div>\r\n                <div className = {\"settings-tab-window \" + window_animation_class}>\r\n                    <div className = \"settings-tab-control\">\r\n                        <Toggle inlineLabel label = {\"Air\"} onChange = {(e, s) => {\r\n                            toggleLayer(\"flightsAll\", s);\r\n                        }}/>\r\n                    </div>\r\n                    <div className = \"settings-tab-control\">\r\n                        <Toggle inlineLabel label = {\"Grounded\"} onChange = {(e,s) => {\r\n                            toggleLayer(\"flightsGrounded\", s)\r\n                        }}/>\r\n                    </div>\r\n                    <div className = \"settings-tab-control\">\r\n                        <Toggle inlineLabel label = {\"Airports\"} onChange = {(e,s) => {\r\n                            toggleLayer(\"Airports\", s)\r\n                        }}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import {Icon} from \"office-ui-fabric-react/lib/Icon\";\r\n\r\nimport React, { Component } from 'react'\r\nimport {moveCamera} from \"../api/mapbox.js\";\r\n\r\n\r\n\r\nexport default class AirportDataPanel extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n\r\n    \r\n    render() {\r\n        var that = this; \r\n\r\n        var airport_data_components = that.props.airportsData.map((data, i) => \r\n            <AirportDataComponent \r\n            lat = {data[\"lat\"]}\r\n            long = {data[\"long\"]}\r\n            key = {\"data-comp-\" + i} \r\n            icao = {data[\"icao24\"]}\r\n            name = {data[\"name\"]}\r\n            timezone = {data[\"timezone\"]}\r\n            city = {data[\"city\"]}\r\n            />\r\n        );\r\n\r\n        return (\r\n            <div id = \"airport-data-panel\">\r\n                <div className = \"airport-data-panel-cancel-button\"\r\n                    onClick ={() => {\r\n                        this.props.unmount()\r\n                        this.props.resetView()\r\n                    }} >\r\n                    <Icon iconName = {\"Cancel\"}/>\r\n                </div>\r\n                <div className = \"airport-data-panel-content\">\r\n                    {airport_data_components}\r\n                </div>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction AirportDataComponent(props){\r\n\r\n    /*\r\n    getArrivalsByIcao(props.icao, (result) => {\r\n        console.log(\"arrivals by icao\");\r\n        console.log(result);\r\n    })\r\n    */\r\n   \r\n    return (\r\n        <div className = \"airport-data-component\"  onClick = {() => {\r\n            moveCamera([props.long, props.lat], 10);\r\n        }}>\r\n            <div className =  \"airport-data-component-name\" >{props.name}</div>\r\n            <div>{props.city}</div>\r\n            <div>Int ID: {props.icao}</div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport {Spinner, SpinnerSize} from 'office-ui-fabric-react/lib/Spinner';\r\n\r\n\r\nexport default function Loader(props)\r\n{\r\n    return (\r\n        <div className = \"loader\" id = {\"loader-\" + props.name}>\r\n            <Spinner size = {SpinnerSize.large}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport FlightData from \"./UI/FlightData.js\";\r\nimport MapControls from \"./UI/MapControls.js\";\r\nimport SettingsTab from \"./UI/SettingsTab.js\";\r\nimport AirportDataPanel from \"./UI/AirportDataPanel.js\";\r\n\r\n//MS Fabric\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport {PrimaryButton} from \"office-ui-fabric-react\"\r\n\r\n\r\nimport {getFirstAirportByCountry, getAirportsByCountry} from \"./helpers/network.js\";\r\n\r\nimport Map from \"./Map.js\";\r\n\r\nimport Loader from \"./UI/Loader.js\";\r\n\r\nimport {moveCamera, getNumFlights, getNumGrounded} from \"./api/mapbox.js\";\r\n\r\nexport default class Overlay extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            airportsData: null,\r\n            currentView: \"World\",\r\n            numGrounded: 0,\r\n            numAirports: 4188,\r\n            numFlights: 0,\r\n            displayAirportPanel: false,\r\n            dataUpdateInterval: null\r\n        }\r\n\r\n        this.unmountAirportPanel = this.unmountAirportPanel.bind(this);\r\n        this.mountAirportPanel = this.mountAirportPanel.bind(this);\r\n\r\n        this.resetView = this.resetView.bind(this);\r\n\r\n    }\r\n\r\n    unmountAirportPanel(){\r\n        this.setState({\r\n            displayAirportPanel: false\r\n        })\r\n    }\r\n\r\n    mountAirportPanel(){\r\n        this.setState({\r\n            displayAirportPanel: true\r\n        })\r\n    }\r\n\r\n    resetView(){\r\n        var that = this;\r\n\r\n        var num_flights = 0;\r\n        var num_grounded = 0;\r\n        \r\n        this.setState({\r\n            currentView: \"World\", \r\n            numAirports: 4188,\r\n            dataUpdateInterval: setInterval(()=> {\r\n\r\n                num_flights = getNumFlights();\r\n                num_grounded = getNumGrounded();\r\n    \r\n                that.setState({\r\n                    numFlights: num_flights,\r\n                    numGrounded: num_grounded\r\n                })\r\n            }, 2000)\r\n            \r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        var that = this;\r\n\r\n        var num_flights = 0;\r\n        var num_grounded = 0;\r\n\r\n        this.setState({\r\n            dataUpdateInterval: setInterval(()=> {\r\n\r\n                num_flights = getNumFlights();\r\n                num_grounded = getNumGrounded();\r\n    \r\n                that.setState({\r\n                    numFlights: num_flights,\r\n                    numGrounded: num_grounded\r\n                })\r\n            }, 2000)\r\n        });\r\n    }\r\n\r\n    render() {            \r\n\r\n        var that = this;\r\n\r\n        var airport_panel = (this.state.displayAirportPanel && <AirportDataPanel\r\n        resetView = {that.resetView} \r\n        unmount = {that.unmountAirportPanel}\r\n        airportsData = {this.state.airportsData}\r\n        />)\r\n        \r\n        return (\r\n            <div id = \"overlay\">\r\n                {airport_panel}\r\n                <Loader name = \"overlay\"/>\r\n                <FlightData \r\n                    view = {this.state.currentView}\r\n                    airports = {this.state.numAirports}\r\n                    grounded = {this.state.numGrounded}\r\n                    flights = {this.state.numFlights}/>\r\n                <div className = \"overlay-input-container\">\r\n                        <TextField\r\n                        placeholder = \"Enter Country\"\r\n                        onChange = {(evt, input) => {\r\n                            this.setState({\r\n                                inputValue: input\r\n                            })\r\n                        }}\r\n                        />\r\n                        <br></br>\r\n                        <PrimaryButton \r\n                        text = \"Find\"\r\n                        onClick = {()=> {\r\n                            var that = this;\r\n\r\n                            getFirstAirportByCountry(this.state.inputValue, (result) => {\r\n                                moveCamera([result.long, result.lat], 6);\r\n                            });\r\n\r\n                            getAirportsByCountry(this.state.inputValue, (result) => {\r\n                                console.log(result);\r\n                                if(result.data !== null){\r\n\r\n                                    clearInterval(this.state.dataUpdateInterval);\r\n\r\n                                    \r\n                                    this.setState({\r\n                                        inputValue: \"\",\r\n                                        displayAirportPanel: true,\r\n                                        currentView: that.state.inputValue.toUpperCase(),\r\n                                        numAirports: result.num_airports,\r\n                                        airportsData: result.data\r\n                                    })\r\n                                }\r\n                                else{\r\n\r\n                                }\r\n                            });\r\n                        }}/>\r\n                </div>\r\n                <MapControls/>\r\n                <SettingsTab/>\r\n                <Map/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport {initializeIcons} from \"@uifabric/icons\";\r\n\r\nimport React from 'react';\r\nimport Map from \"./Map.js\";\r\n\r\nimport Overlay from \"./Overlay.js\";\r\n\r\nfunction App() {\r\n  initializeIcons();\r\n  return (\r\n    <div className=\"App\">\r\n      <Overlay/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport {renderMap, plotGrounded, plotAirports} from \"./api/mapbox.js\";\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n\r\n//from mapbox api\r\nrenderMap();\r\nplotGrounded();\r\nplotAirports();\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}